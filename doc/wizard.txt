Hawk's Cluster Setup Wizard
===========================
Tim Serong <tserong@suse.com>

== Introduction

Hawk provides a setup wizard to ease cluster configuration, by walking
the user through a series of steps to configure some set of resources,
e.g.: a web server (consisting of an apache instance + a virtual IP address),
or an OCFS2 filesystem (consisting of o2cb, dlm, clvm, and a filesystem).

This document provides an overview of wizard operation and the templates
that drive the wizard.  The templates are loosely based on those from
the crm shell, with the addition of XML metadata so Hawk can make sense
of them.  Two items of terminology are important here:

* "workflow": the entire series of steps necessary to apply a
  particular configuration.
* "template": a single wizard step, can be reused by many workflows
  (e.g.: a single virtual IP resource).

== Wizard Operation

The setup wizard is accessible from the context menu next to the resource
list on Hawk's summary screen.  The first wizard screen lists available
workflows.  After selecting one, the user is walked through the series
of steps defined for that workflow, entering whatever parameters are
applicable (IP addresses, mountpoints, config file paths, etc.)  Finally,
they are presented with the configuration that will be applied, in crm
shell syntax.  If the user is happy with this, the configuration is then
applied and the user can return to the status screen.

== Workflow and Template Specifics

Workflows and templates are stored in the following directories:

* /srv/www/hawk/config/wizard/workflows
* /srv/www/hawk/config/wizard/templates

Any files with a ".xml" extension in those directories are considered
to be workflows or templates respectively.  All workflows will be listed
on the first wizard screen for selection by the user.  The workflows
themselves then define what templates are used.

The workflow and template format should be reasonably self-explanatory
to anyone familiar with OCF RA metadata and crm shell syntax.

Each workflow has:

* A name/id ([A-Aa-z0-9-]+), which should be the same as the workflow
  filename.
* A short and long text description.  The short description is what's
  shown in the list of workflows.  The long description is displayed
  when the workflow is selected.
* A set of parameters which the user must enter on the next page of
  the wizard after the workflow is selected (optional).
* A list of template instances which constitute the remaining wizard
  steps (optional if parameters were specified, i.e. a workflow must
  have at least one or both of parameters and templates).
* A description of each step (be it parameters or a template step),
  to be displayed at the top of the screen (optional).
* A crm shell script which contains the configuration to be applied.
  This will be applied in addition to the crm shell script from each
  referenced template.

Each template instance has:

* A name ([A-Za-z0-9-]+), which must be unique within that workflow,
  and can be the same as the template filename excluding the .xml
  extension, in which case a single instance of that template is
  allowed.
* An optional type ([A-Za-z0-9-]+), which, if provided, identifies the
  template used for this step. If a type is not defined, the type is
  assumed to be equal to the name.
* A short and long text description.  The short description is used
  as a heading for the wizard step the template is used in.  The long
  description is not currently exposed.
* A set of parameters which the user must enter.
* A crm shell script which contains the configuration to be applied.

Workflows can:

* Override default values for parameters specicied in templates (e.g.: an
  OCFS2 workflow can specify fstype=ocfs2 for the filesystem template it
  uses).

Parameters have:

* A name/id ([A-Aa-z0-9-]+).
* A short and long text description.  The short description is used
  as the field label.  The long description is displayed when the field
  is selected.
* A required flag (0/1).  Required field labels are bold, and a value
  must be set or the wizard won't proceeed to the next step.
* A type (currently only "string" or "boolean"), and a default value.

crm shell scripts can:

* Embed parameters from the current template or workflow, e.g.:
  +primitive <insert param="id"/> ocf:heartbeat:apache...+
* Include sections only if a parameter is set, e.g.:
  +params <if set="options">options="<insert param="options"/>"</if>...+
* In workflows, can embed parameters from templates, e.g.:
  +group g-<insert param="id" from_template="filesystem"/>...+

All of the above features are demonstrated in the existing workflows
("ocfs2", "webserver") and templates ("apache", "filesystem", "virtual-ip");
it is recommended to base new templates and workflows off one of these.

=== Annotated Web Server Workflow ===

...............
<?xml version="1.0"?>
<workflow name="webserver">  <!-- should match filename -->

<shortdesc lang="en">        <!-- used in workflow selector -->
Web Server
</shortdesc> 
<longdesc lang="en">         <!-- shown when workflow selected -->
Configure a resource group containing a virtual IP address...
</longdesc>

                             <!-- parameters requested, so this becomes
                                  first step after workflow selection -->
<parameters>
<stepdesc lang="en">         <!-- shown at top of wizard step -->
The ID specified here is for the web server resource group.
</stepdesc>
<parameter name="id" required="1">
<shortdesc lang="en">Group ID</shortdesc>
<longdesc lang="en">
Unique ID for the web server resource group in the cluster.
</longdesc>
<content type="string" default="web-server"/>
</parameter>
                             <!-- only one parameter, but if there
                                  were more, they would all appear
                                  on the same screen -->
</parameters>

<templates>
                             <!-- use virtual-ip template for next step -->
<template name="virtual-ip" required="1">
<stepdesc lang="en">         <!-- shown at top of wizard step -->
The IP address configured here will start before the Apache instance.
</stepdesc>

  <!-- if it's necessary to override default values in a template,
       use <override name="param-id" value="new-default-value"/> -->

</template>
                             <!-- use apache template for final step
                                  set the optional type in case more
                                  web servers will be added later on -->
<template name="www" type="apache" required="1">
<stepdesc lang="en">         <!-- shown at top of wizard step -->
The Apache configuration file specified here must be available via the
same path on all cluster nodes.
</stepdesc>
</template>
</templates>

<crm_script>
                             <!-- script to apply, in addition to those
                                  from the included templates -->
group <insert param="id"/>
  <insert param="id" from_template="virtual-ip"/>
  <insert param="id" from_template="www"/>
                             <!-- note indent above, this is how we
                                  do line continuation (no
                                  backslashes!). Also note the use
                                  of the template instance name 'www',
                                  instead of the template name
                                  'apache'. -->
</crm_script>

</workflow>
...............

=== Annotated Virtual IP Address Template ===

...............
<?xml version="1.0"?>
<template name="virtual-ip"> <!-- should match filename -->

<shortdesc lang="en">
Virtual IP Address           <!-- shown in wizard step heading -->
</shortdesc>
<longdesc lang="en">         <!-- not displayed anywhere -->
Create a single primitive resource of type IPaddr2.
</longdesc>

<parameters>
                             <!-- multiple params, will be displayed
                                  in the order they are defined -->
<parameter name="id" required="1">
<shortdesc lang="en">
Resource ID                  <!-- used as field label -->
</shortdesc>
<longdesc lang="en">         <!-- displayed when field selected -->
Unique ID for this virtual IP address resource in the cluster.
</longdesc>
<content type="string" default="virtual-ip"/>
</parameter>

<parameter name="ip" required="1">
<shortdesc lang="en">IP address</shortdesc>
<longdesc lang="en">
The IPv4 address to be configured in dotted quad notation,
for example "192.168.1.1".
</longdesc>
<content type="string" default=""/>
</parameter>

<parameter name="netmask">   <!-- optional param -->
<shortdesc lang="en">Netmask</shortdesc>
<longdesc lang="en">
The netmask to be used (if unspecified it will be determined
automatically).
</longdesc>
<content type="string"/>
</parameter>

<parameter name="lvs_support"> <!-- optional param -->
<shortdesc lang="en">LVS support</shortdesc>
<longdesc lang="en">
Enable support for LVS Direct Routing configurations. In case a IP
address is stopped, only move it to the loopback device to allow the
local node to continue to service requests, but no longer advertise it
on the network.
</longdesc>
<content type="boolean"/>
</parameter>

</parameters>

<crm_script>
primitive <insert param="id"/> ocf:heartbeat:IPaddr2
  params
    ip="<insert param="ip"/>"
    <if set="netmask">cidr_netmask="<insert param="netmask"/>"</if>
    <if set="lvs_support">lvs_support="<insert param="lvs_support"/>"</if>
  op start timeout="20" op stop timeout="20"
  op monitor interval="10" timeout="20"
  
  <!--
    Note:
    - usage of "if set" to only include snippet if that param is set.
    - Extra params indent is not significant, it's just pretty
  -->
  
</crm_script>

</template>
...............

== Guidelines for Template/Workflow Creators

* Make the parameter descriptions and names as descriptive as possible.
  The user is meant to be able to understand what they are required to
  enter.
* Use step descriptions to give the user an idea of what to expect next,
  or to highlight particular caveats or requirements of that step.
* Provide defaults for as many parameters as possible.
* Expose as few parameters as possible to get a working/sane configuration.
  The user can always go edit the configuration later if they need access
  to more parameters.
* When creating crm scripts, remember to indent any line that continues
  from the previous line, because Hawk will join together all indented
  lines to make a single valid crm invocation.  Do not put backslashes
  at line ends.  See the existing templates for examples.

== Known Issues

As at 2011-07-22, template/workflow parsing is fairly strict; we thus have
the following limitations:

* All text elements (stepdesc, shortdesc, longdesc) must specify lang="en",
  or Hawk will not notice them (it specifically looks for only English
  text).
* When specifying required parameters, use required="1" or required="0";
  required="true" and required="false" do not work.
* Optional steps (<template required="0">) are not yet implemented.  In
  future there will be a "skip this step" checkbox for optional steps, but
  for now, all steps will be presented to the user regardless of the
  required attribute.

== Random Ideas

* There's no reason the wizard is confined to creating resources.  It can
  be used to create any configuration you would ordinarily enter by running
  "crm configure".
* There could be a workflow to set useful global defaults, e.g.:
  placement-strategy, rsc_defaults migration-threshold, op_defaults timeout
  etc.
* There could be a workflow that does nothing other than add a colocation
  and ordering constraint for two resources, the user would supply only
  "first" and "second" resource ids.
* There could be a workflow to create a clone-of-group with dlm, o2cb, clvm
  and cmirror.  There could then be a separate workflow that asked the user
  for the id of that base clone, then created a filesystem clone with
  appropriate colocation and ordering constraints so it started after the
  base clone.  The user could then use this latter workflow to create many
  filesystems dependent on the same base clone.

