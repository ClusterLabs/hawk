# Copyright (c) Tim Serong <tserong@suse.com>
# Copyright (c) Kristoffer Gronlund <kgronlund@suse.com>
# Copyright (c) Ayoub Belarbi <abelarbi@suse.com>
# See COPYING for license.

#
# Note: When using Bundler (i.e. on SLES), the Gemfile is used.
# Anywhere else, we don't package the Gemfile, so need to require
# rails, fast_gettext, etc. in config/boot.rb, i.e. if we add more
# gems here, they need to go in config/boot.rb as well. Yes, this
# sucks, but it's the least-worst solution I can find right now for
# making Bundler go away when we neither need nor want it.
#
# Have I mentioned lately that while Bundler may be "the best way to
# manage a Ruby application's gems", it's an absolute menace if you're
# trying to build packaged software?
#

gem "rails", "~> 5.1"
gem "puma", ">= 3"
gem "sass-rails", ">= 5.0.1"
gem "virtus", "~> 1.0.1"
gem "js-routes", ">= 1.3.3"
gem "fast_gettext", ">= 1.4"
gem "gettext_i18n_rails", ">= 1.8"
gem "gettext_i18n_rails_js", ">= 1.3"
gem "sprockets", ">= 3.7"
gem "kramdown", ">= 1.14"

group :development do
  source "https://rubygems.org"
  gem "web-console", ">= 3.5"
  gem "spring", ">= 2.0"
  gem "uglifier", ">= 3"
  gem "gettext", ">= 3.2", require: false
  gem "byebug"
end

group :test do
  if ENV["RAILS_ENV"] == "test"
    source "https://rubygems.org"
    gem "rubocop"
    gem "rake"
    gem "brakeman"
    gem "rspec-rails", ">= 3.4.2"
  end
end

instance_eval(File.read("Gemfile.local")) if File.exist? "Gemfile.local"
